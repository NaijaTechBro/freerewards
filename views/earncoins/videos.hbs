 {{> earncoinsheader}}

<meta name="_csrf" content="{{csrfToken}}">
<div class="earncoins-title">
			<h3>Watch videos</h3>
     

<div id="player"></div>
<p id="display"></p>
<button class="btn" onclick="location.reload();">Next video</button>
 </div>
<script>
{{!-- var token = document.querySelector('meta[name="csrf-token"]').getAttribute('content') --}}
  var player, timer, timeSpent = [], AbleToPost = true, display = document.getElementById('display');
  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '390',
      width: '640',
      videoId: '{{video.videoId}}',
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  // 4. The API will call this function when the video player is ready.
  function onPlayerReady(event) {

    event.target.playVideo();
  }

  // 5. The API calls this function when the player's state changes.
  //    The function indicates that when playing a video (state=1),
  //    the player should play for six seconds and then stop.

  function onPlayerStateChange(event) {
    if (event.data === 1) { // Started playing
      if (!timeSpent.length) {
        for (var i = 0, l = parseInt(player.getDuration()); i < l; i++) timeSpent.push(false);
      }
      timer = setInterval(record, 100);
    } else {
      clearInterval(timer);
    }
  }

  function record() {
    timeSpent[parseInt(player.getCurrentTime())] = true;
    showPercentage();

  }

  function showPercentage() {
    var percent = 0;

    for (var i = 0, l = timeSpent.length; i < l; i++) {
      if (timeSpent[i]) percent++;
    }
    percent = Math.round(percent / timeSpent.length * 100);
    display.innerHTML = percent + "%";
    if (percent >=30 && AbleToPost) {
      AbleToPost = false




    $.ajaxSetup({
        headers: {'X-CSRF-Token': $('meta[name="_csrf"]').attr('content')}
    });
        $.post(
            "/earncoins/videos",
            {
                _csrf : $('meta[name="_csrf"]').attr('content')
            }, function (response) {
        
          console.log(response); // ex.: { user: 'Your User'}
          
          swal({
            title: "Good job!",
            text: "You Earned 5 coins",
            icon: "success",
            buttons: {
              continue: {
                text: 'continue watching',
                value: 'continue'
              },
              next: {
                text: 'Next Video!',
                value: 'next'
              }

            }
          }).then(function (value) {
            if (value == 'next') {
              location.reload();
            }
          })

        });

    }
  }

</script> {{!-- function onPlayerStateChange(event) { if (event.data == YT.PlayerState.ENDED) { document.body.innerHTML += '
<form id="formv" action="/earncoins/videos" method="post">
  <input type="hidden" name="q" value="a">
</form>'; document.getElementById("formv").submit(); } } --}} {{!--
<iframe width="420" onended="function a(){console.log('hi')}" height="315" src="https://www.youtube.com/embed/{{videoToDisplay.youtubeLink}}?autoplay=1">
</iframe>
{{videoToDisplay.title}}

<script type="text/javascript">
  function onendVideo() {


    document.body.innerHTML += '<form id="formv" action="http://example.com/" method="post"><input type="hidden" name="q" value="a"></form>';
    document.getElementById("formv").submit();

  }
</script> --}}

{{!-- 
      .then(function (response) {
        
          console.log(response.data); // ex.: { user: 'Your User'}
          console.log(response.status);
          swal({
            title: "Good job!",
            text: "You Earned 5 coins",
            icon: "success",
            buttons: {
              continue: {
                text: 'continue watching',
                value: 'continue'
              },
              next: {
                text: 'Next Video!',
                value: 'next'
              }

            }
          }).then(function (value) {
            if (value == 'next') {
              location.reload();
            }
          })

        }); --}}